version: "3.8"

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: my-laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/.env:/var/www/.env
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
    depends_on:
      - db

  websockets:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-laravel-websockets
    container_name: my-laravel-websockets
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan websockets:serve
    volumes:
      - ./backend:/var/www
      - ./backend/.env:/var/www/.env
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    container_name: my-nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - websockets
    networks:
      - app-network

  node:
    platform: linux/arm64/v8 # this line is optional if you are using Mac Silicon chip (M1/M2/M3)
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: my-laravel-node
    container_name: my-laravel-node
    ports:
      - "3000:3000"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./frontend:/var/www
      - /var/www/node_modules
    networks:
      - app-network
    command: npm run dev

  db:
    platform: linux/x86_64 # this line is optional if you are using Mac Silicon chip (M1/M2/M3)
    image: mysql:8.0
    container_name: my-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME} # Optional - define a non-root user
      MYSQL_PASSWORD: ${DB_PASSWORD} # Optional - define the password for the non-root user
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "3306:3306"

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
